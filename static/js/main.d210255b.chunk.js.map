{"version":3,"sources":["App.js","index.js"],"names":["App","useState","textArea","setTextArea","isRunningTimer","setIsRunningTimer","timer","setTimer","wordCountState","setWordCount","textAreaRef","useRef","useEffect","setTimeout","prevTimer","current","disabled","split","filter","word","length","onChange","event","target","value","ref","onClick","focus","ReactDOM","render","document","getElementById"],"mappings":"gNAwEeA,MAtEf,WAEI,IAFW,EAIqBC,mBAAS,IAJ9B,mBAIJC,EAJI,KAIMC,EAJN,OAKiCF,oBAAS,GAL1C,mBAKJG,EALI,KAKYC,EALZ,OAMeJ,mBAJJ,IAFX,mBAMJK,EANI,KAMGC,EANH,OAO4BN,mBAAS,GAPrC,mBAOJO,EAPI,KAOYC,EAPZ,KASLC,EAAcC,iBAAO,MAqC3B,OAXAC,qBAAW,WACJN,EAAQ,GAAKF,EACZS,YAAY,kBAAMN,GAAS,SAAAO,GAAS,OAAIA,EAAY,OAAI,KAE1C,IAAVR,IATRI,EAAYK,QAAQC,UAAW,EAC/BX,GAAkB,GAClBI,EAAuBP,EAhBAe,MAAM,KACGC,QAAQ,SAAAC,GAAI,MAAa,KAATA,KAC3BC,WAyBtB,CAACd,EAAOF,IAIP,6BACI,qDACA,8BACIiB,SAvCZ,SAAsBC,GAClBnB,EAAYmB,EAAMC,OAAOC,QAuCjBA,MAAOtB,EACPuB,IAAKf,EACLM,UAAU,IAEd,+CAAqBV,GACrB,4BACIoB,QAAS,SAACJ,GAnClBZ,EAAYK,QAAQC,UAAW,EAC/BN,EAAYK,QAAQY,QACpBtB,GAAkB,GAClBE,EAvBkB,IAwBlBJ,EAAY,KAmCJa,SAAUZ,GALd,SASA,2CAAiBI,KC/D7BoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d210255b.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction App() {\r\n    \r\n    const TIMER_DEFAULT = 20\r\n\r\n    const [textArea, setTextArea] = useState(\"\")\r\n    const [isRunningTimer, setIsRunningTimer] = useState(false)\r\n    const [timer, setTimer] = useState(TIMER_DEFAULT)\r\n    const [wordCountState, setWordCount] = useState(0)\r\n\r\n    const textAreaRef = useRef(null)\r\n\r\n    function handleChange(event){\r\n        setTextArea(event.target.value)\r\n    }\r\n    \r\n    function wordCount(text){\r\n        const wordArray = text.split(\" \")\r\n        const filteredArray = wordArray.filter( word => word !== \"\")\r\n        return filteredArray.length\r\n    }\r\n\r\n    function startGame(){\r\n        textAreaRef.current.disabled = false\r\n        textAreaRef.current.focus()\r\n        setIsRunningTimer(true)\r\n        setTimer(TIMER_DEFAULT)\r\n        setTextArea(\"\")\r\n    }\r\n\r\n    function gameEnd(){\r\n        textAreaRef.current.disabled = true\r\n        setIsRunningTimer(false)\r\n        setWordCount(wordCount(textArea))\r\n    }\r\n\r\n    useEffect( () => {\r\n        if(timer > 0 && isRunningTimer){\r\n            setTimeout( () => setTimer(prevTimer => prevTimer - 1), 1000)          \r\n        }\r\n        else if(timer === 0){\r\n            gameEnd()\r\n        }\r\n\r\n    }, [timer, isRunningTimer]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>How fast do you type?</h1>\r\n            <textarea\r\n                onChange={handleChange}\r\n                value={textArea}\r\n                ref={textAreaRef}\r\n                disabled={true}\r\n            />\r\n            <h4>Time remaining: {timer}</h4>\r\n            <button \r\n                onClick={(event) => {\r\n                        startGame()\r\n                    }\r\n                }\r\n                disabled={isRunningTimer}\r\n            >\r\n                Start\r\n            </button>\r\n            <h1>Word count: {wordCountState}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}